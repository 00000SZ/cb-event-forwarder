// Code generated by protoc-gen-go.
// source: sensor_events.proto
// DO NOT EDIT!

/*
Package sensor_events is a generated protocol buffer package.

It is generated from these files:
	sensor_events.proto

It has these top-level messages:
	CbHeaderMsg
	CbStringMsg
	CbProcessMsg
	CbChildProcessMsg
	CbModuleLoadMsg
	CbFileModMsg
	CbRegModMsg
	CbNetConnMsg
	CbLinStatsMsg
	CbCrossProcessOpenMsg
	CbCreateRemoteThreadMsg
	CbCrossProcessMsg
	CbProcessBlockedMsg
	CbNetConnBlockedMsg
	CbStatisticsMsg
	CbModuleInfoMsg
	CbVtWriteMsg
	CbVtLoadMsg
	CbEndpointEnvironmentMsg
	CbServerEnvironmentMsg
	CbEnvironmentMsg
	CbTamperAlertMsg
	CbEmetMitigationAction
	CbEmetMitigationMsg
	CbEventMsg
*/
package sensor_events

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CbStringMsg_CbStringType int32

const (
	CbStringMsg_typeFilepath CbStringMsg_CbStringType = 1
	CbStringMsg_typeRegpath  CbStringMsg_CbStringType = 2
	CbStringMsg_typeNetpath  CbStringMsg_CbStringType = 3
)

var CbStringMsg_CbStringType_name = map[int32]string{
	1: "typeFilepath",
	2: "typeRegpath",
	3: "typeNetpath",
}
var CbStringMsg_CbStringType_value = map[string]int32{
	"typeFilepath": 1,
	"typeRegpath":  2,
	"typeNetpath":  3,
}

func (x CbStringMsg_CbStringType) Enum() *CbStringMsg_CbStringType {
	p := new(CbStringMsg_CbStringType)
	*p = x
	return p
}
func (x CbStringMsg_CbStringType) String() string {
	return proto.EnumName(CbStringMsg_CbStringType_name, int32(x))
}
func (x *CbStringMsg_CbStringType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbStringMsg_CbStringType_value, data, "CbStringMsg_CbStringType")
	if err != nil {
		return err
	}
	*x = CbStringMsg_CbStringType(value)
	return nil
}

type CbFileModMsg_CbFileModAction int32

const (
	CbFileModMsg_actionFileModCreate    CbFileModMsg_CbFileModAction = 1
	CbFileModMsg_actionFileModWrite     CbFileModMsg_CbFileModAction = 2
	CbFileModMsg_actionFileModDelete    CbFileModMsg_CbFileModAction = 4
	CbFileModMsg_actionFileModLastWrite CbFileModMsg_CbFileModAction = 8
	CbFileModMsg_actionFileModOpen      CbFileModMsg_CbFileModAction = 16
)

var CbFileModMsg_CbFileModAction_name = map[int32]string{
	1:  "actionFileModCreate",
	2:  "actionFileModWrite",
	4:  "actionFileModDelete",
	8:  "actionFileModLastWrite",
	16: "actionFileModOpen",
}
var CbFileModMsg_CbFileModAction_value = map[string]int32{
	"actionFileModCreate":    1,
	"actionFileModWrite":     2,
	"actionFileModDelete":    4,
	"actionFileModLastWrite": 8,
	"actionFileModOpen":      16,
}

func (x CbFileModMsg_CbFileModAction) Enum() *CbFileModMsg_CbFileModAction {
	p := new(CbFileModMsg_CbFileModAction)
	*p = x
	return p
}
func (x CbFileModMsg_CbFileModAction) String() string {
	return proto.EnumName(CbFileModMsg_CbFileModAction_name, int32(x))
}
func (x *CbFileModMsg_CbFileModAction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbFileModMsg_CbFileModAction_value, data, "CbFileModMsg_CbFileModAction")
	if err != nil {
		return err
	}
	*x = CbFileModMsg_CbFileModAction(value)
	return nil
}

type CbFileModMsg_CbFileType int32

const (
	CbFileModMsg_filetypeUnknown       CbFileModMsg_CbFileType = 0
	CbFileModMsg_filetypePe            CbFileModMsg_CbFileType = 1
	CbFileModMsg_filetypeElf           CbFileModMsg_CbFileType = 2
	CbFileModMsg_filetypeUniversalBin  CbFileModMsg_CbFileType = 3
	CbFileModMsg_filetypeEicar         CbFileModMsg_CbFileType = 8
	CbFileModMsg_filetypeOfficeLegacy  CbFileModMsg_CbFileType = 16
	CbFileModMsg_filetypeOfficeOpenXml CbFileModMsg_CbFileType = 17
	CbFileModMsg_filetypePdf           CbFileModMsg_CbFileType = 48
	CbFileModMsg_filetypeArchivePkzip  CbFileModMsg_CbFileType = 64
	CbFileModMsg_filetypeArchiveLzh    CbFileModMsg_CbFileType = 65
	CbFileModMsg_filetypeArchiveLzw    CbFileModMsg_CbFileType = 66
	CbFileModMsg_filetypeArchiveRar    CbFileModMsg_CbFileType = 67
	CbFileModMsg_filetypeArchiveTar    CbFileModMsg_CbFileType = 68
	CbFileModMsg_filetypeArchive7zip   CbFileModMsg_CbFileType = 69
)

var CbFileModMsg_CbFileType_name = map[int32]string{
	0:  "filetypeUnknown",
	1:  "filetypePe",
	2:  "filetypeElf",
	3:  "filetypeUniversalBin",
	8:  "filetypeEicar",
	16: "filetypeOfficeLegacy",
	17: "filetypeOfficeOpenXml",
	48: "filetypePdf",
	64: "filetypeArchivePkzip",
	65: "filetypeArchiveLzh",
	66: "filetypeArchiveLzw",
	67: "filetypeArchiveRar",
	68: "filetypeArchiveTar",
	69: "filetypeArchive7zip",
}
var CbFileModMsg_CbFileType_value = map[string]int32{
	"filetypeUnknown":       0,
	"filetypePe":            1,
	"filetypeElf":           2,
	"filetypeUniversalBin":  3,
	"filetypeEicar":         8,
	"filetypeOfficeLegacy":  16,
	"filetypeOfficeOpenXml": 17,
	"filetypePdf":           48,
	"filetypeArchivePkzip":  64,
	"filetypeArchiveLzh":    65,
	"filetypeArchiveLzw":    66,
	"filetypeArchiveRar":    67,
	"filetypeArchiveTar":    68,
	"filetypeArchive7zip":   69,
}

func (x CbFileModMsg_CbFileType) Enum() *CbFileModMsg_CbFileType {
	p := new(CbFileModMsg_CbFileType)
	*p = x
	return p
}
func (x CbFileModMsg_CbFileType) String() string {
	return proto.EnumName(CbFileModMsg_CbFileType_name, int32(x))
}
func (x *CbFileModMsg_CbFileType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbFileModMsg_CbFileType_value, data, "CbFileModMsg_CbFileType")
	if err != nil {
		return err
	}
	*x = CbFileModMsg_CbFileType(value)
	return nil
}

type CbRegModMsg_CbRegModAction int32

const (
	CbRegModMsg_actionRegModCreateKey   CbRegModMsg_CbRegModAction = 1
	CbRegModMsg_actionRegModWriteValue  CbRegModMsg_CbRegModAction = 2
	CbRegModMsg_actionRegModDeleteKey   CbRegModMsg_CbRegModAction = 4
	CbRegModMsg_actionRegModDeleteValue CbRegModMsg_CbRegModAction = 8
)

var CbRegModMsg_CbRegModAction_name = map[int32]string{
	1: "actionRegModCreateKey",
	2: "actionRegModWriteValue",
	4: "actionRegModDeleteKey",
	8: "actionRegModDeleteValue",
}
var CbRegModMsg_CbRegModAction_value = map[string]int32{
	"actionRegModCreateKey":   1,
	"actionRegModWriteValue":  2,
	"actionRegModDeleteKey":   4,
	"actionRegModDeleteValue": 8,
}

func (x CbRegModMsg_CbRegModAction) Enum() *CbRegModMsg_CbRegModAction {
	p := new(CbRegModMsg_CbRegModAction)
	*p = x
	return p
}
func (x CbRegModMsg_CbRegModAction) String() string {
	return proto.EnumName(CbRegModMsg_CbRegModAction_name, int32(x))
}
func (x *CbRegModMsg_CbRegModAction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbRegModMsg_CbRegModAction_value, data, "CbRegModMsg_CbRegModAction")
	if err != nil {
		return err
	}
	*x = CbRegModMsg_CbRegModAction(value)
	return nil
}

type CbNetConnMsg_ProtocolType int32

const (
	CbNetConnMsg_ProtoTcp CbNetConnMsg_ProtocolType = 6
	CbNetConnMsg_ProtoUdp CbNetConnMsg_ProtocolType = 17
)

var CbNetConnMsg_ProtocolType_name = map[int32]string{
	6:  "ProtoTcp",
	17: "ProtoUdp",
}
var CbNetConnMsg_ProtocolType_value = map[string]int32{
	"ProtoTcp": 6,
	"ProtoUdp": 17,
}

func (x CbNetConnMsg_ProtocolType) Enum() *CbNetConnMsg_ProtocolType {
	p := new(CbNetConnMsg_ProtocolType)
	*p = x
	return p
}
func (x CbNetConnMsg_ProtocolType) String() string {
	return proto.EnumName(CbNetConnMsg_ProtocolType_name, int32(x))
}
func (x *CbNetConnMsg_ProtocolType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbNetConnMsg_ProtocolType_value, data, "CbNetConnMsg_ProtocolType")
	if err != nil {
		return err
	}
	*x = CbNetConnMsg_ProtocolType(value)
	return nil
}

type CbCrossProcessOpenMsg_OpenType int32

const (
	CbCrossProcessOpenMsg_OpenProcessHandle CbCrossProcessOpenMsg_OpenType = 1
	CbCrossProcessOpenMsg_OpenThreadHandle  CbCrossProcessOpenMsg_OpenType = 2
)

var CbCrossProcessOpenMsg_OpenType_name = map[int32]string{
	1: "OpenProcessHandle",
	2: "OpenThreadHandle",
}
var CbCrossProcessOpenMsg_OpenType_value = map[string]int32{
	"OpenProcessHandle": 1,
	"OpenThreadHandle":  2,
}

func (x CbCrossProcessOpenMsg_OpenType) Enum() *CbCrossProcessOpenMsg_OpenType {
	p := new(CbCrossProcessOpenMsg_OpenType)
	*p = x
	return p
}
func (x CbCrossProcessOpenMsg_OpenType) String() string {
	return proto.EnumName(CbCrossProcessOpenMsg_OpenType_name, int32(x))
}
func (x *CbCrossProcessOpenMsg_OpenType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbCrossProcessOpenMsg_OpenType_value, data, "CbCrossProcessOpenMsg_OpenType")
	if err != nil {
		return err
	}
	*x = CbCrossProcessOpenMsg_OpenType(value)
	return nil
}

type CbProcessBlockedMsg_BlockType int32

const (
	CbProcessBlockedMsg_MD5Hash CbProcessBlockedMsg_BlockType = 1
)

var CbProcessBlockedMsg_BlockType_name = map[int32]string{
	1: "MD5Hash",
}
var CbProcessBlockedMsg_BlockType_value = map[string]int32{
	"MD5Hash": 1,
}

func (x CbProcessBlockedMsg_BlockType) Enum() *CbProcessBlockedMsg_BlockType {
	p := new(CbProcessBlockedMsg_BlockType)
	*p = x
	return p
}
func (x CbProcessBlockedMsg_BlockType) String() string {
	return proto.EnumName(CbProcessBlockedMsg_BlockType_name, int32(x))
}
func (x *CbProcessBlockedMsg_BlockType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbProcessBlockedMsg_BlockType_value, data, "CbProcessBlockedMsg_BlockType")
	if err != nil {
		return err
	}
	*x = CbProcessBlockedMsg_BlockType(value)
	return nil
}

type CbProcessBlockedMsg_BlockEvent int32

const (
	CbProcessBlockedMsg_ProcessCreate  CbProcessBlockedMsg_BlockEvent = 1
	CbProcessBlockedMsg_RunningProcess CbProcessBlockedMsg_BlockEvent = 2
)

var CbProcessBlockedMsg_BlockEvent_name = map[int32]string{
	1: "ProcessCreate",
	2: "RunningProcess",
}
var CbProcessBlockedMsg_BlockEvent_value = map[string]int32{
	"ProcessCreate":  1,
	"RunningProcess": 2,
}

func (x CbProcessBlockedMsg_BlockEvent) Enum() *CbProcessBlockedMsg_BlockEvent {
	p := new(CbProcessBlockedMsg_BlockEvent)
	*p = x
	return p
}
func (x CbProcessBlockedMsg_BlockEvent) String() string {
	return proto.EnumName(CbProcessBlockedMsg_BlockEvent_name, int32(x))
}
func (x *CbProcessBlockedMsg_BlockEvent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbProcessBlockedMsg_BlockEvent_value, data, "CbProcessBlockedMsg_BlockEvent")
	if err != nil {
		return err
	}
	*x = CbProcessBlockedMsg_BlockEvent(value)
	return nil
}

type CbProcessBlockedMsg_BlockResult int32

const (
	CbProcessBlockedMsg_ProcessTerminated                  CbProcessBlockedMsg_BlockResult = 0
	CbProcessBlockedMsg_NotTerminatedCBProcess             CbProcessBlockedMsg_BlockResult = 1
	CbProcessBlockedMsg_NotTerminatedSystemProcess         CbProcessBlockedMsg_BlockResult = 2
	CbProcessBlockedMsg_NotTerminatedCriticalSystemProcess CbProcessBlockedMsg_BlockResult = 3
	CbProcessBlockedMsg_NotTerminatedWhitelistedPath       CbProcessBlockedMsg_BlockResult = 4
	CbProcessBlockedMsg_NotTerminatedOpenProcessError      CbProcessBlockedMsg_BlockResult = 5
	CbProcessBlockedMsg_NotTerminatedTerminateError        CbProcessBlockedMsg_BlockResult = 6
)

var CbProcessBlockedMsg_BlockResult_name = map[int32]string{
	0: "ProcessTerminated",
	1: "NotTerminatedCBProcess",
	2: "NotTerminatedSystemProcess",
	3: "NotTerminatedCriticalSystemProcess",
	4: "NotTerminatedWhitelistedPath",
	5: "NotTerminatedOpenProcessError",
	6: "NotTerminatedTerminateError",
}
var CbProcessBlockedMsg_BlockResult_value = map[string]int32{
	"ProcessTerminated":                  0,
	"NotTerminatedCBProcess":             1,
	"NotTerminatedSystemProcess":         2,
	"NotTerminatedCriticalSystemProcess": 3,
	"NotTerminatedWhitelistedPath":       4,
	"NotTerminatedOpenProcessError":      5,
	"NotTerminatedTerminateError":        6,
}

func (x CbProcessBlockedMsg_BlockResult) Enum() *CbProcessBlockedMsg_BlockResult {
	p := new(CbProcessBlockedMsg_BlockResult)
	*p = x
	return p
}
func (x CbProcessBlockedMsg_BlockResult) String() string {
	return proto.EnumName(CbProcessBlockedMsg_BlockResult_name, int32(x))
}
func (x *CbProcessBlockedMsg_BlockResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbProcessBlockedMsg_BlockResult_value, data, "CbProcessBlockedMsg_BlockResult")
	if err != nil {
		return err
	}
	*x = CbProcessBlockedMsg_BlockResult(value)
	return nil
}

type CbNetConnBlockedMsg_NetconnBlockType int32

const (
	CbNetConnBlockedMsg_NetworkIsolation CbNetConnBlockedMsg_NetconnBlockType = 1
)

var CbNetConnBlockedMsg_NetconnBlockType_name = map[int32]string{
	1: "NetworkIsolation",
}
var CbNetConnBlockedMsg_NetconnBlockType_value = map[string]int32{
	"NetworkIsolation": 1,
}

func (x CbNetConnBlockedMsg_NetconnBlockType) Enum() *CbNetConnBlockedMsg_NetconnBlockType {
	p := new(CbNetConnBlockedMsg_NetconnBlockType)
	*p = x
	return p
}
func (x CbNetConnBlockedMsg_NetconnBlockType) String() string {
	return proto.EnumName(CbNetConnBlockedMsg_NetconnBlockType_name, int32(x))
}
func (x *CbNetConnBlockedMsg_NetconnBlockType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbNetConnBlockedMsg_NetconnBlockType_value, data, "CbNetConnBlockedMsg_NetconnBlockType")
	if err != nil {
		return err
	}
	*x = CbNetConnBlockedMsg_NetconnBlockType(value)
	return nil
}

type CbNetConnBlockedMsg_ProtocolType int32

const (
	CbNetConnBlockedMsg_ProtoTcp CbNetConnBlockedMsg_ProtocolType = 6
	CbNetConnBlockedMsg_ProtoUdp CbNetConnBlockedMsg_ProtocolType = 17
)

var CbNetConnBlockedMsg_ProtocolType_name = map[int32]string{
	6:  "ProtoTcp",
	17: "ProtoUdp",
}
var CbNetConnBlockedMsg_ProtocolType_value = map[string]int32{
	"ProtoTcp": 6,
	"ProtoUdp": 17,
}

func (x CbNetConnBlockedMsg_ProtocolType) Enum() *CbNetConnBlockedMsg_ProtocolType {
	p := new(CbNetConnBlockedMsg_ProtocolType)
	*p = x
	return p
}
func (x CbNetConnBlockedMsg_ProtocolType) String() string {
	return proto.EnumName(CbNetConnBlockedMsg_ProtocolType_name, int32(x))
}
func (x *CbNetConnBlockedMsg_ProtocolType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbNetConnBlockedMsg_ProtocolType_value, data, "CbNetConnBlockedMsg_ProtocolType")
	if err != nil {
		return err
	}
	*x = CbNetConnBlockedMsg_ProtocolType(value)
	return nil
}

type CbTamperAlertMsg_CbTamperAlertType int32

const (
	CbTamperAlertMsg_AlertCoreDriverUnloaded    CbTamperAlertMsg_CbTamperAlertType = 1
	CbTamperAlertMsg_AlertNetworkDriverUnloaded CbTamperAlertMsg_CbTamperAlertType = 2
	CbTamperAlertMsg_AlertCbServiceStopped      CbTamperAlertMsg_CbTamperAlertType = 3
	CbTamperAlertMsg_AlertCbProcessTerminated   CbTamperAlertMsg_CbTamperAlertType = 4
	CbTamperAlertMsg_AlertCbCodeInjection       CbTamperAlertMsg_CbTamperAlertType = 5
)

var CbTamperAlertMsg_CbTamperAlertType_name = map[int32]string{
	1: "AlertCoreDriverUnloaded",
	2: "AlertNetworkDriverUnloaded",
	3: "AlertCbServiceStopped",
	4: "AlertCbProcessTerminated",
	5: "AlertCbCodeInjection",
}
var CbTamperAlertMsg_CbTamperAlertType_value = map[string]int32{
	"AlertCoreDriverUnloaded":    1,
	"AlertNetworkDriverUnloaded": 2,
	"AlertCbServiceStopped":      3,
	"AlertCbProcessTerminated":   4,
	"AlertCbCodeInjection":       5,
}

func (x CbTamperAlertMsg_CbTamperAlertType) Enum() *CbTamperAlertMsg_CbTamperAlertType {
	p := new(CbTamperAlertMsg_CbTamperAlertType)
	*p = x
	return p
}
func (x CbTamperAlertMsg_CbTamperAlertType) String() string {
	return proto.EnumName(CbTamperAlertMsg_CbTamperAlertType_name, int32(x))
}
func (x *CbTamperAlertMsg_CbTamperAlertType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbTamperAlertMsg_CbTamperAlertType_value, data, "CbTamperAlertMsg_CbTamperAlertType")
	if err != nil {
		return err
	}
	*x = CbTamperAlertMsg_CbTamperAlertType(value)
	return nil
}

type CbEmetMitigationAction_CbEmetMitigationTypes int32

const (
	CbEmetMitigationAction_actionDep              CbEmetMitigationAction_CbEmetMitigationTypes = 1
	CbEmetMitigationAction_actionSehop            CbEmetMitigationAction_CbEmetMitigationTypes = 2
	CbEmetMitigationAction_actionAsr              CbEmetMitigationAction_CbEmetMitigationTypes = 3
	CbEmetMitigationAction_actionAslr             CbEmetMitigationAction_CbEmetMitigationTypes = 4
	CbEmetMitigationAction_actionNullPage         CbEmetMitigationAction_CbEmetMitigationTypes = 5
	CbEmetMitigationAction_actionHeapSpray        CbEmetMitigationAction_CbEmetMitigationTypes = 6
	CbEmetMitigationAction_actionMandatoryAslr    CbEmetMitigationAction_CbEmetMitigationTypes = 7
	CbEmetMitigationAction_actionEaf              CbEmetMitigationAction_CbEmetMitigationTypes = 8
	CbEmetMitigationAction_actionEafPlus          CbEmetMitigationAction_CbEmetMitigationTypes = 9
	CbEmetMitigationAction_actionBottomUpAslr     CbEmetMitigationAction_CbEmetMitigationTypes = 10
	CbEmetMitigationAction_actionLoadLibrary      CbEmetMitigationAction_CbEmetMitigationTypes = 11
	CbEmetMitigationAction_actionMemoryProtection CbEmetMitigationAction_CbEmetMitigationTypes = 12
	CbEmetMitigationAction_actionSimulateExecFlow CbEmetMitigationAction_CbEmetMitigationTypes = 13
	CbEmetMitigationAction_actionStackPivot       CbEmetMitigationAction_CbEmetMitigationTypes = 14
	CbEmetMitigationAction_actionCallerChecks     CbEmetMitigationAction_CbEmetMitigationTypes = 15
	CbEmetMitigationAction_actionBannedFunctions  CbEmetMitigationAction_CbEmetMitigationTypes = 16
	CbEmetMitigationAction_actionDeepHooks        CbEmetMitigationAction_CbEmetMitigationTypes = 17
	CbEmetMitigationAction_actionAntiDetours      CbEmetMitigationAction_CbEmetMitigationTypes = 18
)

var CbEmetMitigationAction_CbEmetMitigationTypes_name = map[int32]string{
	1:  "actionDep",
	2:  "actionSehop",
	3:  "actionAsr",
	4:  "actionAslr",
	5:  "actionNullPage",
	6:  "actionHeapSpray",
	7:  "actionMandatoryAslr",
	8:  "actionEaf",
	9:  "actionEafPlus",
	10: "actionBottomUpAslr",
	11: "actionLoadLibrary",
	12: "actionMemoryProtection",
	13: "actionSimulateExecFlow",
	14: "actionStackPivot",
	15: "actionCallerChecks",
	16: "actionBannedFunctions",
	17: "actionDeepHooks",
	18: "actionAntiDetours",
}
var CbEmetMitigationAction_CbEmetMitigationTypes_value = map[string]int32{
	"actionDep":              1,
	"actionSehop":            2,
	"actionAsr":              3,
	"actionAslr":             4,
	"actionNullPage":         5,
	"actionHeapSpray":        6,
	"actionMandatoryAslr":    7,
	"actionEaf":              8,
	"actionEafPlus":          9,
	"actionBottomUpAslr":     10,
	"actionLoadLibrary":      11,
	"actionMemoryProtection": 12,
	"actionSimulateExecFlow": 13,
	"actionStackPivot":       14,
	"actionCallerChecks":     15,
	"actionBannedFunctions":  16,
	"actionDeepHooks":        17,
	"actionAntiDetours":      18,
}

func (x CbEmetMitigationAction_CbEmetMitigationTypes) Enum() *CbEmetMitigationAction_CbEmetMitigationTypes {
	p := new(CbEmetMitigationAction_CbEmetMitigationTypes)
	*p = x
	return p
}
func (x CbEmetMitigationAction_CbEmetMitigationTypes) String() string {
	return proto.EnumName(CbEmetMitigationAction_CbEmetMitigationTypes_name, int32(x))
}
func (x *CbEmetMitigationAction_CbEmetMitigationTypes) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CbEmetMitigationAction_CbEmetMitigationTypes_value, data, "CbEmetMitigationAction_CbEmetMitigationTypes")
	if err != nil {
		return err
	}
	*x = CbEmetMitigationAction_CbEmetMitigationTypes(value)
	return nil
}

type CbHeaderMsg struct {
	Version                   *int32  `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Bootid                    *int32  `protobuf:"varint,2,opt,name=bootid" json:"bootid,omitempty"`
	Eventid                   *int32  `protobuf:"varint,3,opt,name=eventid" json:"eventid,omitempty"`
	Timestamp                 *int64  `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	ProcessGuid               *int64  `protobuf:"varint,5,opt,name=process_guid" json:"process_guid,omitempty"`
	FilepathStringGuid        *int64  `protobuf:"varint,6,opt,name=filepath_string_guid" json:"filepath_string_guid,omitempty"`
	Magic                     *uint32 `protobuf:"varint,7,opt,name=magic" json:"magic,omitempty"`
	ProcessFilepathStringGuid *int64  `protobuf:"varint,8,opt,name=process_filepath_string_guid" json:"process_filepath_string_guid,omitempty"`
	ProcessCreateTime         *int64  `protobuf:"varint,9,opt,name=process_create_time" json:"process_create_time,omitempty"`
	ProcessPid                *int32  `protobuf:"varint,10,opt,name=process_pid" json:"process_pid,omitempty"`
	ProcessMd5                []byte  `protobuf:"bytes,11,opt,name=process_md5" json:"process_md5,omitempty"`
	ProcessPath               *string `protobuf:"bytes,12,opt,name=process_path" json:"process_path,omitempty"`
	XXX_unrecognized          []byte  `json:"-"`
}

func (m *CbHeaderMsg) Reset()         { *m = CbHeaderMsg{} }
func (m *CbHeaderMsg) String() string { return proto.CompactTextString(m) }
func (*CbHeaderMsg) ProtoMessage()    {}

func (m *CbHeaderMsg) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CbHeaderMsg) GetBootid() int32 {
	if m != nil && m.Bootid != nil {
		return *m.Bootid
	}
	return 0
}

func (m *CbHeaderMsg) GetEventid() int32 {
	if m != nil && m.Eventid != nil {
		return *m.Eventid
	}
	return 0
}

func (m *CbHeaderMsg) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CbHeaderMsg) GetProcessGuid() int64 {
	if m != nil && m.ProcessGuid != nil {
		return *m.ProcessGuid
	}
	return 0
}

func (m *CbHeaderMsg) GetFilepathStringGuid() int64 {
	if m != nil && m.FilepathStringGuid != nil {
		return *m.FilepathStringGuid
	}
	return 0
}

func (m *CbHeaderMsg) GetMagic() uint32 {
	if m != nil && m.Magic != nil {
		return *m.Magic
	}
	return 0
}

func (m *CbHeaderMsg) GetProcessFilepathStringGuid() int64 {
	if m != nil && m.ProcessFilepathStringGuid != nil {
		return *m.ProcessFilepathStringGuid
	}
	return 0
}

func (m *CbHeaderMsg) GetProcessCreateTime() int64 {
	if m != nil && m.ProcessCreateTime != nil {
		return *m.ProcessCreateTime
	}
	return 0
}

func (m *CbHeaderMsg) GetProcessPid() int32 {
	if m != nil && m.ProcessPid != nil {
		return *m.ProcessPid
	}
	return 0
}

func (m *CbHeaderMsg) GetProcessMd5() []byte {
	if m != nil {
		return m.ProcessMd5
	}
	return nil
}

func (m *CbHeaderMsg) GetProcessPath() string {
	if m != nil && m.ProcessPath != nil {
		return *m.ProcessPath
	}
	return ""
}

type CbStringMsg struct {
	Guid             *int64                    `protobuf:"varint,1,opt,name=guid" json:"guid,omitempty"`
	Utf8String       []byte                    `protobuf:"bytes,2,opt,name=utf8string" json:"utf8string,omitempty"`
	StringType       *CbStringMsg_CbStringType `protobuf:"varint,3,opt,name=string_type,enum=CbStringMsg_CbStringType,def=1" json:"string_type,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *CbStringMsg) Reset()         { *m = CbStringMsg{} }
func (m *CbStringMsg) String() string { return proto.CompactTextString(m) }
func (*CbStringMsg) ProtoMessage()    {}

const Default_CbStringMsg_StringType CbStringMsg_CbStringType = CbStringMsg_typeFilepath

func (m *CbStringMsg) GetGuid() int64 {
	if m != nil && m.Guid != nil {
		return *m.Guid
	}
	return 0
}

func (m *CbStringMsg) GetUtf8String() []byte {
	if m != nil {
		return m.Utf8String
	}
	return nil
}

func (m *CbStringMsg) GetStringType() CbStringMsg_CbStringType {
	if m != nil && m.StringType != nil {
		return *m.StringType
	}
	return Default_CbStringMsg_StringType
}

type CbProcessMsg struct {
	Pid     *int32 `protobuf:"varint,1,opt,name=pid" json:"pid,omitempty"`
	Created *bool  `protobuf:"varint,2,opt,name=created" json:"created,omitempty"`
	// on created filepath_string_guid will be
	// the path to the process base module on disk
	ParentPid        *int32  `protobuf:"varint,3,opt,name=parent_pid" json:"parent_pid,omitempty"`
	ParentCreateTime *int64  `protobuf:"varint,4,opt,name=parent_create_time" json:"parent_create_time,omitempty"`
	ParentGuid       *int64  `protobuf:"varint,5,opt,name=parent_guid" json:"parent_guid,omitempty"`
	Md5Hash          []byte  `protobuf:"bytes,6,opt,name=md5hash" json:"md5hash,omitempty"`
	HaveSeenBefore   *bool   `protobuf:"varint,7,opt,name=have_seen_before" json:"have_seen_before,omitempty"`
	Deprecated       *int64  `protobuf:"varint,8,opt,name=deprecated" json:"deprecated,omitempty"`
	Commandline      []byte  `protobuf:"bytes,9,opt,name=commandline" json:"commandline,omitempty"`
	ParentMd5        []byte  `protobuf:"bytes,10,opt,name=parent_md5" json:"parent_md5,omitempty"`
	ParentPath       *string `protobuf:"bytes,11,opt,name=parent_path" json:"parent_path,omitempty"`
	Creationobserved *bool   `protobuf:"varint,12,opt,name=creationobserved,def=0" json:"creationobserved,omitempty"`
	// already running at sensor start time
	ExpectFollowonWMd5 *bool `protobuf:"varint,13,opt,name=expect_followon_w_md5,def=0" json:"expect_followon_w_md5,omitempty"`
	// and will send a new process message with md5 when calc complete
	Uid               *string                   `protobuf:"bytes,14,opt,name=uid" json:"uid,omitempty"`
	Username          *string                   `protobuf:"bytes,15,opt,name=username" json:"username,omitempty"`
	Actions           []*CbEmetMitigationAction `protobuf:"bytes,16,rep,name=actions" json:"actions,omitempty"`
	ActionsAreFromGPO *bool                     `protobuf:"varint,17,opt,name=actionsAreFromGPO,def=0" json:"actionsAreFromGPO,omitempty"`
	XXX_unrecognized  []byte                    `json:"-"`
}

func (m *CbProcessMsg) Reset()         { *m = CbProcessMsg{} }
func (m *CbProcessMsg) String() string { return proto.CompactTextString(m) }
func (*CbProcessMsg) ProtoMessage()    {}

const Default_CbProcessMsg_Creationobserved bool = false
const Default_CbProcessMsg_ExpectFollowonWMd5 bool = false
const Default_CbProcessMsg_ActionsAreFromGPO bool = false

func (m *CbProcessMsg) GetPid() int32 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *CbProcessMsg) GetCreated() bool {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return false
}

func (m *CbProcessMsg) GetParentPid() int32 {
	if m != nil && m.ParentPid != nil {
		return *m.ParentPid
	}
	return 0
}

func (m *CbProcessMsg) GetParentCreateTime() int64 {
	if m != nil && m.ParentCreateTime != nil {
		return *m.ParentCreateTime
	}
	return 0
}

func (m *CbProcessMsg) GetParentGuid() int64 {
	if m != nil && m.ParentGuid != nil {
		return *m.ParentGuid
	}
	return 0
}

func (m *CbProcessMsg) GetMd5Hash() []byte {
	if m != nil {
		return m.Md5Hash
	}
	return nil
}

func (m *CbProcessMsg) GetHaveSeenBefore() bool {
	if m != nil && m.HaveSeenBefore != nil {
		return *m.HaveSeenBefore
	}
	return false
}

func (m *CbProcessMsg) GetDeprecated() int64 {
	if m != nil && m.Deprecated != nil {
		return *m.Deprecated
	}
	return 0
}

func (m *CbProcessMsg) GetCommandline() []byte {
	if m != nil {
		return m.Commandline
	}
	return nil
}

func (m *CbProcessMsg) GetParentMd5() []byte {
	if m != nil {
		return m.ParentMd5
	}
	return nil
}

func (m *CbProcessMsg) GetParentPath() string {
	if m != nil && m.ParentPath != nil {
		return *m.ParentPath
	}
	return ""
}

func (m *CbProcessMsg) GetCreationobserved() bool {
	if m != nil && m.Creationobserved != nil {
		return *m.Creationobserved
	}
	return Default_CbProcessMsg_Creationobserved
}

func (m *CbProcessMsg) GetExpectFollowonWMd5() bool {
	if m != nil && m.ExpectFollowonWMd5 != nil {
		return *m.ExpectFollowonWMd5
	}
	return Default_CbProcessMsg_ExpectFollowonWMd5
}

func (m *CbProcessMsg) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *CbProcessMsg) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *CbProcessMsg) GetActions() []*CbEmetMitigationAction {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *CbProcessMsg) GetActionsAreFromGPO() bool {
	if m != nil && m.ActionsAreFromGPO != nil {
		return *m.ActionsAreFromGPO
	}
	return Default_CbProcessMsg_ActionsAreFromGPO
}

//
// ChildProcessMsg is a subset of CbProcessMsg
// It is used in support of allowing viewing of child processes in the event
// stream (for example, in the UI's process analysis page) and in allowing
// child processes to be tagged as events.
//
type CbChildProcessMsg struct {
	Created          *bool   `protobuf:"varint,1,opt,name=created" json:"created,omitempty"`
	ParentGuid       *int64  `protobuf:"varint,2,opt,name=parent_guid" json:"parent_guid,omitempty"`
	Md5Hash          []byte  `protobuf:"bytes,3,opt,name=md5hash" json:"md5hash,omitempty"`
	ChildGuid        *int64  `protobuf:"varint,4,opt,name=child_guid" json:"child_guid,omitempty"`
	Path             *string `protobuf:"bytes,5,opt,name=path" json:"path,omitempty"`
	Pid              *int64  `protobuf:"varint,6,opt,name=pid" json:"pid,omitempty"`
	CreateTime       *int64  `protobuf:"varint,7,opt,name=create_time" json:"create_time,omitempty"`
	Tamper           *bool   `protobuf:"varint,8,opt,name=tamper,def=0" json:"tamper,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CbChildProcessMsg) Reset()         { *m = CbChildProcessMsg{} }
func (m *CbChildProcessMsg) String() string { return proto.CompactTextString(m) }
func (*CbChildProcessMsg) ProtoMessage()    {}

const Default_CbChildProcessMsg_Tamper bool = false

func (m *CbChildProcessMsg) GetCreated() bool {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return false
}

func (m *CbChildProcessMsg) GetParentGuid() int64 {
	if m != nil && m.ParentGuid != nil {
		return *m.ParentGuid
	}
	return 0
}

func (m *CbChildProcessMsg) GetMd5Hash() []byte {
	if m != nil {
		return m.Md5Hash
	}
	return nil
}

func (m *CbChildProcessMsg) GetChildGuid() int64 {
	if m != nil && m.ChildGuid != nil {
		return *m.ChildGuid
	}
	return 0
}

func (m *CbChildProcessMsg) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CbChildProcessMsg) GetPid() int64 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *CbChildProcessMsg) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *CbChildProcessMsg) GetTamper() bool {
	if m != nil && m.Tamper != nil {
		return *m.Tamper
	}
	return Default_CbChildProcessMsg_Tamper
}

type CbModuleLoadMsg struct {
	Guid                 *int64  `protobuf:"varint,1,opt,name=guid" json:"guid,omitempty"`
	HandlepathStringGuid *int64  `protobuf:"varint,2,opt,name=handlepath_string_guid" json:"handlepath_string_guid,omitempty"`
	Md5Hash              []byte  `protobuf:"bytes,3,opt,name=md5hash" json:"md5hash,omitempty"`
	Scanid               *int32  `protobuf:"varint,4,opt,name=scanid" json:"scanid,omitempty"`
	IsProcessBaseModule  *bool   `protobuf:"varint,5,opt,name=is_process_base_module" json:"is_process_base_module,omitempty"`
	ImageBase            *int64  `protobuf:"varint,6,opt,name=image_base" json:"image_base,omitempty"`
	ImageSize            *uint32 `protobuf:"varint,7,opt,name=image_size" json:"image_size,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CbModuleLoadMsg) Reset()         { *m = CbModuleLoadMsg{} }
func (m *CbModuleLoadMsg) String() string { return proto.CompactTextString(m) }
func (*CbModuleLoadMsg) ProtoMessage()    {}

func (m *CbModuleLoadMsg) GetGuid() int64 {
	if m != nil && m.Guid != nil {
		return *m.Guid
	}
	return 0
}

func (m *CbModuleLoadMsg) GetHandlepathStringGuid() int64 {
	if m != nil && m.HandlepathStringGuid != nil {
		return *m.HandlepathStringGuid
	}
	return 0
}

func (m *CbModuleLoadMsg) GetMd5Hash() []byte {
	if m != nil {
		return m.Md5Hash
	}
	return nil
}

func (m *CbModuleLoadMsg) GetScanid() int32 {
	if m != nil && m.Scanid != nil {
		return *m.Scanid
	}
	return 0
}

func (m *CbModuleLoadMsg) GetIsProcessBaseModule() bool {
	if m != nil && m.IsProcessBaseModule != nil {
		return *m.IsProcessBaseModule
	}
	return false
}

func (m *CbModuleLoadMsg) GetImageBase() int64 {
	if m != nil && m.ImageBase != nil {
		return *m.ImageBase
	}
	return 0
}

func (m *CbModuleLoadMsg) GetImageSize() uint32 {
	if m != nil && m.ImageSize != nil {
		return *m.ImageSize
	}
	return 0
}

type CbFileModMsg struct {
	Guid             *int64                        `protobuf:"varint,1,opt,name=guid" json:"guid,omitempty"`
	Action           *CbFileModMsg_CbFileModAction `protobuf:"varint,2,opt,name=action,enum=CbFileModMsg_CbFileModAction" json:"action,omitempty"`
	HaveSeenBefore   *bool                         `protobuf:"varint,3,opt,name=have_seen_before" json:"have_seen_before,omitempty"`
	Md5Hash          []byte                        `protobuf:"bytes,4,opt,name=md5hash" json:"md5hash,omitempty"`
	Type             *CbFileModMsg_CbFileType      `protobuf:"varint,5,opt,name=type,enum=CbFileModMsg_CbFileType" json:"type,omitempty"`
	Tamper           *bool                         `protobuf:"varint,6,opt,name=tamper,def=0" json:"tamper,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CbFileModMsg) Reset()         { *m = CbFileModMsg{} }
func (m *CbFileModMsg) String() string { return proto.CompactTextString(m) }
func (*CbFileModMsg) ProtoMessage()    {}

const Default_CbFileModMsg_Tamper bool = false

func (m *CbFileModMsg) GetGuid() int64 {
	if m != nil && m.Guid != nil {
		return *m.Guid
	}
	return 0
}

func (m *CbFileModMsg) GetAction() CbFileModMsg_CbFileModAction {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return CbFileModMsg_actionFileModCreate
}

func (m *CbFileModMsg) GetHaveSeenBefore() bool {
	if m != nil && m.HaveSeenBefore != nil {
		return *m.HaveSeenBefore
	}
	return false
}

func (m *CbFileModMsg) GetMd5Hash() []byte {
	if m != nil {
		return m.Md5Hash
	}
	return nil
}

func (m *CbFileModMsg) GetType() CbFileModMsg_CbFileType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return CbFileModMsg_filetypeUnknown
}

func (m *CbFileModMsg) GetTamper() bool {
	if m != nil && m.Tamper != nil {
		return *m.Tamper
	}
	return Default_CbFileModMsg_Tamper
}

type CbRegModMsg struct {
	Guid             *int64                      `protobuf:"varint,1,opt,name=guid" json:"guid,omitempty"`
	Action           *CbRegModMsg_CbRegModAction `protobuf:"varint,2,opt,name=action,enum=CbRegModMsg_CbRegModAction" json:"action,omitempty"`
	HaveSeenBefore   *bool                       `protobuf:"varint,3,opt,name=have_seen_before" json:"have_seen_before,omitempty"`
	Utf8Regpath      []byte                      `protobuf:"bytes,4,opt,name=utf8_regpath" json:"utf8_regpath,omitempty"`
	Tamper           *bool                       `protobuf:"varint,5,opt,name=tamper,def=0" json:"tamper,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *CbRegModMsg) Reset()         { *m = CbRegModMsg{} }
func (m *CbRegModMsg) String() string { return proto.CompactTextString(m) }
func (*CbRegModMsg) ProtoMessage()    {}

const Default_CbRegModMsg_Tamper bool = false

func (m *CbRegModMsg) GetGuid() int64 {
	if m != nil && m.Guid != nil {
		return *m.Guid
	}
	return 0
}

func (m *CbRegModMsg) GetAction() CbRegModMsg_CbRegModAction {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return CbRegModMsg_actionRegModCreateKey
}

func (m *CbRegModMsg) GetHaveSeenBefore() bool {
	if m != nil && m.HaveSeenBefore != nil {
		return *m.HaveSeenBefore
	}
	return false
}

func (m *CbRegModMsg) GetUtf8Regpath() []byte {
	if m != nil {
		return m.Utf8Regpath
	}
	return nil
}

func (m *CbRegModMsg) GetTamper() bool {
	if m != nil && m.Tamper != nil {
		return *m.Tamper
	}
	return Default_CbRegModMsg_Tamper
}

//
// describes an inbound or outbound network connection
//
type CbNetConnMsg struct {
	Guid             *int64                     `protobuf:"varint,1,opt,name=guid" json:"guid,omitempty"`
	Ipv4Address      *uint32                    `protobuf:"varint,2,opt,name=ipv4Address" json:"ipv4Address,omitempty"`
	Ipv6LoPart       *uint64                    `protobuf:"varint,3,opt,name=ipv6LoPart" json:"ipv6LoPart,omitempty"`
	Ipv6HiPart       *uint64                    `protobuf:"varint,4,opt,name=ipv6HiPart" json:"ipv6HiPart,omitempty"`
	Port             *uint32                    `protobuf:"varint,5,opt,name=port" json:"port,omitempty"`
	Protocol         *CbNetConnMsg_ProtocolType `protobuf:"varint,6,opt,name=protocol,enum=CbNetConnMsg_ProtocolType" json:"protocol,omitempty"`
	Utf8Netpath      []byte                     `protobuf:"bytes,7,opt,name=utf8_netpath" json:"utf8_netpath,omitempty"`
	Outbound         *bool                      `protobuf:"varint,8,opt,name=outbound,def=1" json:"outbound,omitempty"`
	ProxyConnection  *bool                      `protobuf:"varint,9,opt,name=proxyConnection,def=0" json:"proxyConnection,omitempty"`
	ProxyIpv4Address *uint32                    `protobuf:"varint,10,opt,name=proxyIpv4Address" json:"proxyIpv4Address,omitempty"`
	ProxyPort        *uint32                    `protobuf:"varint,11,opt,name=proxyPort" json:"proxyPort,omitempty"`
	ProxyNetPath     *string                    `protobuf:"bytes,12,opt,name=proxyNetPath" json:"proxyNetPath,omitempty"`
	RemoteIpAddress  *uint32                    `protobuf:"varint,13,opt,name=remoteIpAddress" json:"remoteIpAddress,omitempty"`
	RemotePort       *uint32                    `protobuf:"varint,14,opt,name=remotePort" json:"remotePort,omitempty"`
	LocalIpAddress   *uint32                    `protobuf:"varint,15,opt,name=localIpAddress" json:"localIpAddress,omitempty"`
	LocalPort        *uint32                    `protobuf:"varint,16,opt,name=localPort" json:"localPort,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CbNetConnMsg) Reset()         { *m = CbNetConnMsg{} }
func (m *CbNetConnMsg) String() string { return proto.CompactTextString(m) }
func (*CbNetConnMsg) ProtoMessage()    {}

const Default_CbNetConnMsg_Outbound bool = true
const Default_CbNetConnMsg_ProxyConnection bool = false

func (m *CbNetConnMsg) GetGuid() int64 {
	if m != nil && m.Guid != nil {
		return *m.Guid
	}
	return 0
}

func (m *CbNetConnMsg) GetIpv4Address() uint32 {
	if m != nil && m.Ipv4Address != nil {
		return *m.Ipv4Address
	}
	return 0
}

func (m *CbNetConnMsg) GetIpv6LoPart() uint64 {
	if m != nil && m.Ipv6LoPart != nil {
		return *m.Ipv6LoPart
	}
	return 0
}

func (m *CbNetConnMsg) GetIpv6HiPart() uint64 {
	if m != nil && m.Ipv6HiPart != nil {
		return *m.Ipv6HiPart
	}
	return 0
}

func (m *CbNetConnMsg) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *CbNetConnMsg) GetProtocol() CbNetConnMsg_ProtocolType {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return CbNetConnMsg_ProtoTcp
}

func (m *CbNetConnMsg) GetUtf8Netpath() []byte {
	if m != nil {
		return m.Utf8Netpath
	}
	return nil
}

func (m *CbNetConnMsg) GetOutbound() bool {
	if m != nil && m.Outbound != nil {
		return *m.Outbound
	}
	return Default_CbNetConnMsg_Outbound
}

func (m *CbNetConnMsg) GetProxyConnection() bool {
	if m != nil && m.ProxyConnection != nil {
		return *m.ProxyConnection
	}
	return Default_CbNetConnMsg_ProxyConnection
}

func (m *CbNetConnMsg) GetProxyIpv4Address() uint32 {
	if m != nil && m.ProxyIpv4Address != nil {
		return *m.ProxyIpv4Address
	}
	return 0
}

func (m *CbNetConnMsg) GetProxyPort() uint32 {
	if m != nil && m.ProxyPort != nil {
		return *m.ProxyPort
	}
	return 0
}

func (m *CbNetConnMsg) GetProxyNetPath() string {
	if m != nil && m.ProxyNetPath != nil {
		return *m.ProxyNetPath
	}
	return ""
}

func (m *CbNetConnMsg) GetRemoteIpAddress() uint32 {
	if m != nil && m.RemoteIpAddress != nil {
		return *m.RemoteIpAddress
	}
	return 0
}

func (m *CbNetConnMsg) GetRemotePort() uint32 {
	if m != nil && m.RemotePort != nil {
		return *m.RemotePort
	}
	return 0
}

func (m *CbNetConnMsg) GetLocalIpAddress() uint32 {
	if m != nil && m.LocalIpAddress != nil {
		return *m.LocalIpAddress
	}
	return 0
}

func (m *CbNetConnMsg) GetLocalPort() uint32 {
	if m != nil && m.LocalPort != nil {
		return *m.LocalPort
	}
	return 0
}

//
// deprecated
//
type CbLinStatsMsg struct {
	LinTotal                       *int32 `protobuf:"varint,1,opt,name=lin_total" json:"lin_total,omitempty"`
	LinSuccessful                  *int32 `protobuf:"varint,2,opt,name=lin_successful" json:"lin_successful,omitempty"`
	LinNoScanidi                   *int32 `protobuf:"varint,3,opt,name=lin_no_scanidi" json:"lin_no_scanidi,omitempty"`
	LinTotalPended                 *int32 `protobuf:"varint,4,opt,name=lin_total_pended" json:"lin_total_pended,omitempty"`
	LinCurrentScanidPendedSize     *int32 `protobuf:"varint,5,opt,name=lin_current_scanid_pended_size" json:"lin_current_scanid_pended_size,omitempty"`
	LinCurrentHandlepathPendedSize *int32 `protobuf:"varint,6,opt,name=lin_current_handlepath_pended_size" json:"lin_current_handlepath_pended_size,omitempty"`
	LinCurrentFilepathPendedSize   *int32 `protobuf:"varint,7,opt,name=lin_current_filepath_pended_size" json:"lin_current_filepath_pended_size,omitempty"`
	XXX_unrecognized               []byte `json:"-"`
}

func (m *CbLinStatsMsg) Reset()         { *m = CbLinStatsMsg{} }
func (m *CbLinStatsMsg) String() string { return proto.CompactTextString(m) }
func (*CbLinStatsMsg) ProtoMessage()    {}

func (m *CbLinStatsMsg) GetLinTotal() int32 {
	if m != nil && m.LinTotal != nil {
		return *m.LinTotal
	}
	return 0
}

func (m *CbLinStatsMsg) GetLinSuccessful() int32 {
	if m != nil && m.LinSuccessful != nil {
		return *m.LinSuccessful
	}
	return 0
}

func (m *CbLinStatsMsg) GetLinNoScanidi() int32 {
	if m != nil && m.LinNoScanidi != nil {
		return *m.LinNoScanidi
	}
	return 0
}

func (m *CbLinStatsMsg) GetLinTotalPended() int32 {
	if m != nil && m.LinTotalPended != nil {
		return *m.LinTotalPended
	}
	return 0
}

func (m *CbLinStatsMsg) GetLinCurrentScanidPendedSize() int32 {
	if m != nil && m.LinCurrentScanidPendedSize != nil {
		return *m.LinCurrentScanidPendedSize
	}
	return 0
}

func (m *CbLinStatsMsg) GetLinCurrentHandlepathPendedSize() int32 {
	if m != nil && m.LinCurrentHandlepathPendedSize != nil {
		return *m.LinCurrentHandlepathPendedSize
	}
	return 0
}

func (m *CbLinStatsMsg) GetLinCurrentFilepathPendedSize() int32 {
	if m != nil && m.LinCurrentFilepathPendedSize != nil {
		return *m.LinCurrentFilepathPendedSize
	}
	return 0
}

type CbCrossProcessOpenMsg struct {
	Type                 *CbCrossProcessOpenMsg_OpenType `protobuf:"varint,1,opt,name=type,enum=CbCrossProcessOpenMsg_OpenType" json:"type,omitempty"`
	TargetPid            *uint32                         `protobuf:"varint,2,opt,name=targetPid" json:"targetPid,omitempty"`
	TargetProcCreateTime *uint64                         `protobuf:"varint,3,opt,name=targetProcCreateTime" json:"targetProcCreateTime,omitempty"`
	RequestedAccess      *uint32                         `protobuf:"varint,4,opt,name=requestedAccess" json:"requestedAccess,omitempty"`
	TargetProcPath       *string                         `protobuf:"bytes,5,opt,name=targetProcPath" json:"targetProcPath,omitempty"`
	TargetProcMd5        []byte                          `protobuf:"bytes,6,opt,name=targetProcMd5" json:"targetProcMd5,omitempty"`
	XXX_unrecognized     []byte                          `json:"-"`
}

func (m *CbCrossProcessOpenMsg) Reset()         { *m = CbCrossProcessOpenMsg{} }
func (m *CbCrossProcessOpenMsg) String() string { return proto.CompactTextString(m) }
func (*CbCrossProcessOpenMsg) ProtoMessage()    {}

func (m *CbCrossProcessOpenMsg) GetType() CbCrossProcessOpenMsg_OpenType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return CbCrossProcessOpenMsg_OpenProcessHandle
}

func (m *CbCrossProcessOpenMsg) GetTargetPid() uint32 {
	if m != nil && m.TargetPid != nil {
		return *m.TargetPid
	}
	return 0
}

func (m *CbCrossProcessOpenMsg) GetTargetProcCreateTime() uint64 {
	if m != nil && m.TargetProcCreateTime != nil {
		return *m.TargetProcCreateTime
	}
	return 0
}

func (m *CbCrossProcessOpenMsg) GetRequestedAccess() uint32 {
	if m != nil && m.RequestedAccess != nil {
		return *m.RequestedAccess
	}
	return 0
}

func (m *CbCrossProcessOpenMsg) GetTargetProcPath() string {
	if m != nil && m.TargetProcPath != nil {
		return *m.TargetProcPath
	}
	return ""
}

func (m *CbCrossProcessOpenMsg) GetTargetProcMd5() []byte {
	if m != nil {
		return m.TargetProcMd5
	}
	return nil
}

type CbCreateRemoteThreadMsg struct {
	RemoteProcPid        *uint32 `protobuf:"varint,1,opt,name=remoteProcPid" json:"remoteProcPid,omitempty"`
	RemoteProcCreateTime *uint64 `protobuf:"varint,2,opt,name=remoteProcCreateTime" json:"remoteProcCreateTime,omitempty"`
	RemoteProcPath       *string `protobuf:"bytes,3,opt,name=remoteProcPath" json:"remoteProcPath,omitempty"`
	RemoteProcMd5        []byte  `protobuf:"bytes,4,opt,name=remoteProcMd5" json:"remoteProcMd5,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CbCreateRemoteThreadMsg) Reset()         { *m = CbCreateRemoteThreadMsg{} }
func (m *CbCreateRemoteThreadMsg) String() string { return proto.CompactTextString(m) }
func (*CbCreateRemoteThreadMsg) ProtoMessage()    {}

func (m *CbCreateRemoteThreadMsg) GetRemoteProcPid() uint32 {
	if m != nil && m.RemoteProcPid != nil {
		return *m.RemoteProcPid
	}
	return 0
}

func (m *CbCreateRemoteThreadMsg) GetRemoteProcCreateTime() uint64 {
	if m != nil && m.RemoteProcCreateTime != nil {
		return *m.RemoteProcCreateTime
	}
	return 0
}

func (m *CbCreateRemoteThreadMsg) GetRemoteProcPath() string {
	if m != nil && m.RemoteProcPath != nil {
		return *m.RemoteProcPath
	}
	return ""
}

func (m *CbCreateRemoteThreadMsg) GetRemoteProcMd5() []byte {
	if m != nil {
		return m.RemoteProcMd5
	}
	return nil
}

//
// CbCrossProcessEvent
//
// Activities from a process that cross into other process
//
// These are reported in terms of the offending (from) process in the header
//
type CbCrossProcessMsg struct {
	Open             *CbCrossProcessOpenMsg   `protobuf:"bytes,1,opt,name=open" json:"open,omitempty"`
	Remotethread     *CbCreateRemoteThreadMsg `protobuf:"bytes,2,opt,name=remotethread" json:"remotethread,omitempty"`
	Tamper           *bool                    `protobuf:"varint,3,opt,name=tamper" json:"tamper,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CbCrossProcessMsg) Reset()         { *m = CbCrossProcessMsg{} }
func (m *CbCrossProcessMsg) String() string { return proto.CompactTextString(m) }
func (*CbCrossProcessMsg) ProtoMessage()    {}

func (m *CbCrossProcessMsg) GetOpen() *CbCrossProcessOpenMsg {
	if m != nil {
		return m.Open
	}
	return nil
}

func (m *CbCrossProcessMsg) GetRemotethread() *CbCreateRemoteThreadMsg {
	if m != nil {
		return m.Remotethread
	}
	return nil
}

func (m *CbCrossProcessMsg) GetTamper() bool {
	if m != nil && m.Tamper != nil {
		return *m.Tamper
	}
	return false
}

type CbProcessBlockedMsg struct {
	BlockedType           *CbProcessBlockedMsg_BlockType   `protobuf:"varint,1,opt,name=blockedType,enum=CbProcessBlockedMsg_BlockType" json:"blockedType,omitempty"`
	BlockedEvent          *CbProcessBlockedMsg_BlockEvent  `protobuf:"varint,2,opt,name=blockedEvent,enum=CbProcessBlockedMsg_BlockEvent" json:"blockedEvent,omitempty"`
	Blockedmd5Hash        []byte                           `protobuf:"bytes,3,opt,name=blockedmd5Hash" json:"blockedmd5Hash,omitempty"`
	BlockedPath           *string                          `protobuf:"bytes,4,opt,name=blockedPath" json:"blockedPath,omitempty"`
	BlockResult           *CbProcessBlockedMsg_BlockResult `protobuf:"varint,5,opt,name=blockResult,enum=CbProcessBlockedMsg_BlockResult" json:"blockResult,omitempty"`
	BlockError            *uint32                          `protobuf:"varint,6,opt,name=blockError" json:"blockError,omitempty"`
	BlockedPid            *int32                           `protobuf:"varint,7,opt,name=blockedPid" json:"blockedPid,omitempty"`
	BlockedProcCreateTime *uint64                          `protobuf:"varint,8,opt,name=blockedProcCreateTime" json:"blockedProcCreateTime,omitempty"`
	BlockedCmdline        *string                          `protobuf:"bytes,9,opt,name=blockedCmdline" json:"blockedCmdline,omitempty"`
	BlockedUid            *string                          `protobuf:"bytes,10,opt,name=blockedUid" json:"blockedUid,omitempty"`
	BlockedUsername       *string                          `protobuf:"bytes,11,opt,name=blockedUsername" json:"blockedUsername,omitempty"`
	XXX_unrecognized      []byte                           `json:"-"`
}

func (m *CbProcessBlockedMsg) Reset()         { *m = CbProcessBlockedMsg{} }
func (m *CbProcessBlockedMsg) String() string { return proto.CompactTextString(m) }
func (*CbProcessBlockedMsg) ProtoMessage()    {}

func (m *CbProcessBlockedMsg) GetBlockedType() CbProcessBlockedMsg_BlockType {
	if m != nil && m.BlockedType != nil {
		return *m.BlockedType
	}
	return CbProcessBlockedMsg_MD5Hash
}

func (m *CbProcessBlockedMsg) GetBlockedEvent() CbProcessBlockedMsg_BlockEvent {
	if m != nil && m.BlockedEvent != nil {
		return *m.BlockedEvent
	}
	return CbProcessBlockedMsg_ProcessCreate
}

func (m *CbProcessBlockedMsg) GetBlockedmd5Hash() []byte {
	if m != nil {
		return m.Blockedmd5Hash
	}
	return nil
}

func (m *CbProcessBlockedMsg) GetBlockedPath() string {
	if m != nil && m.BlockedPath != nil {
		return *m.BlockedPath
	}
	return ""
}

func (m *CbProcessBlockedMsg) GetBlockResult() CbProcessBlockedMsg_BlockResult {
	if m != nil && m.BlockResult != nil {
		return *m.BlockResult
	}
	return CbProcessBlockedMsg_ProcessTerminated
}

func (m *CbProcessBlockedMsg) GetBlockError() uint32 {
	if m != nil && m.BlockError != nil {
		return *m.BlockError
	}
	return 0
}

func (m *CbProcessBlockedMsg) GetBlockedPid() int32 {
	if m != nil && m.BlockedPid != nil {
		return *m.BlockedPid
	}
	return 0
}

func (m *CbProcessBlockedMsg) GetBlockedProcCreateTime() uint64 {
	if m != nil && m.BlockedProcCreateTime != nil {
		return *m.BlockedProcCreateTime
	}
	return 0
}

func (m *CbProcessBlockedMsg) GetBlockedCmdline() string {
	if m != nil && m.BlockedCmdline != nil {
		return *m.BlockedCmdline
	}
	return ""
}

func (m *CbProcessBlockedMsg) GetBlockedUid() string {
	if m != nil && m.BlockedUid != nil {
		return *m.BlockedUid
	}
	return ""
}

func (m *CbProcessBlockedMsg) GetBlockedUsername() string {
	if m != nil && m.BlockedUsername != nil {
		return *m.BlockedUsername
	}
	return ""
}

type CbNetConnBlockedMsg struct {
	BlockedType *CbNetConnBlockedMsg_NetconnBlockType `protobuf:"varint,1,opt,name=blockedType,enum=CbNetConnBlockedMsg_NetconnBlockType" json:"blockedType,omitempty"`
	// Info about the connection that was blocked:
	Ipv4Address      *uint32                           `protobuf:"varint,2,opt,name=ipv4Address" json:"ipv4Address,omitempty"`
	Ipv6LoPart       *uint64                           `protobuf:"varint,3,opt,name=ipv6LoPart" json:"ipv6LoPart,omitempty"`
	Ipv6HiPart       *uint64                           `protobuf:"varint,4,opt,name=ipv6HiPart" json:"ipv6HiPart,omitempty"`
	Port             *uint32                           `protobuf:"varint,5,opt,name=port" json:"port,omitempty"`
	Protocol         *CbNetConnBlockedMsg_ProtocolType `protobuf:"varint,6,opt,name=protocol,enum=CbNetConnBlockedMsg_ProtocolType" json:"protocol,omitempty"`
	Utf8Netpath      []byte                            `protobuf:"bytes,7,opt,name=utf8_netpath" json:"utf8_netpath,omitempty"`
	Outbound         *bool                             `protobuf:"varint,8,opt,name=outbound,def=1" json:"outbound,omitempty"`
	ProxyConnection  *bool                             `protobuf:"varint,9,opt,name=proxyConnection,def=0" json:"proxyConnection,omitempty"`
	ProxyIpv4Address *uint32                           `protobuf:"varint,10,opt,name=proxyIpv4Address" json:"proxyIpv4Address,omitempty"`
	ProxyPort        *uint32                           `protobuf:"varint,11,opt,name=proxyPort" json:"proxyPort,omitempty"`
	ProxyNetPath     *string                           `protobuf:"bytes,12,opt,name=proxyNetPath" json:"proxyNetPath,omitempty"`
	RemoteIpAddress  *uint32                           `protobuf:"varint,13,opt,name=remoteIpAddress" json:"remoteIpAddress,omitempty"`
	RemotePort       *uint32                           `protobuf:"varint,14,opt,name=remotePort" json:"remotePort,omitempty"`
	LocalIpAddress   *uint32                           `protobuf:"varint,15,opt,name=localIpAddress" json:"localIpAddress,omitempty"`
	LocalPort        *uint32                           `protobuf:"varint,16,opt,name=localPort" json:"localPort,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CbNetConnBlockedMsg) Reset()         { *m = CbNetConnBlockedMsg{} }
func (m *CbNetConnBlockedMsg) String() string { return proto.CompactTextString(m) }
func (*CbNetConnBlockedMsg) ProtoMessage()    {}

const Default_CbNetConnBlockedMsg_Outbound bool = true
const Default_CbNetConnBlockedMsg_ProxyConnection bool = false

func (m *CbNetConnBlockedMsg) GetBlockedType() CbNetConnBlockedMsg_NetconnBlockType {
	if m != nil && m.BlockedType != nil {
		return *m.BlockedType
	}
	return CbNetConnBlockedMsg_NetworkIsolation
}

func (m *CbNetConnBlockedMsg) GetIpv4Address() uint32 {
	if m != nil && m.Ipv4Address != nil {
		return *m.Ipv4Address
	}
	return 0
}

func (m *CbNetConnBlockedMsg) GetIpv6LoPart() uint64 {
	if m != nil && m.Ipv6LoPart != nil {
		return *m.Ipv6LoPart
	}
	return 0
}

func (m *CbNetConnBlockedMsg) GetIpv6HiPart() uint64 {
	if m != nil && m.Ipv6HiPart != nil {
		return *m.Ipv6HiPart
	}
	return 0
}

func (m *CbNetConnBlockedMsg) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *CbNetConnBlockedMsg) GetProtocol() CbNetConnBlockedMsg_ProtocolType {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return CbNetConnBlockedMsg_ProtoTcp
}

func (m *CbNetConnBlockedMsg) GetUtf8Netpath() []byte {
	if m != nil {
		return m.Utf8Netpath
	}
	return nil
}

func (m *CbNetConnBlockedMsg) GetOutbound() bool {
	if m != nil && m.Outbound != nil {
		return *m.Outbound
	}
	return Default_CbNetConnBlockedMsg_Outbound
}

func (m *CbNetConnBlockedMsg) GetProxyConnection() bool {
	if m != nil && m.ProxyConnection != nil {
		return *m.ProxyConnection
	}
	return Default_CbNetConnBlockedMsg_ProxyConnection
}

func (m *CbNetConnBlockedMsg) GetProxyIpv4Address() uint32 {
	if m != nil && m.ProxyIpv4Address != nil {
		return *m.ProxyIpv4Address
	}
	return 0
}

func (m *CbNetConnBlockedMsg) GetProxyPort() uint32 {
	if m != nil && m.ProxyPort != nil {
		return *m.ProxyPort
	}
	return 0
}

func (m *CbNetConnBlockedMsg) GetProxyNetPath() string {
	if m != nil && m.ProxyNetPath != nil {
		return *m.ProxyNetPath
	}
	return ""
}

func (m *CbNetConnBlockedMsg) GetRemoteIpAddress() uint32 {
	if m != nil && m.RemoteIpAddress != nil {
		return *m.RemoteIpAddress
	}
	return 0
}

func (m *CbNetConnBlockedMsg) GetRemotePort() uint32 {
	if m != nil && m.RemotePort != nil {
		return *m.RemotePort
	}
	return 0
}

func (m *CbNetConnBlockedMsg) GetLocalIpAddress() uint32 {
	if m != nil && m.LocalIpAddress != nil {
		return *m.LocalIpAddress
	}
	return 0
}

func (m *CbNetConnBlockedMsg) GetLocalPort() uint32 {
	if m != nil && m.LocalPort != nil {
		return *m.LocalPort
	}
	return 0
}

//
// deprecated
//
type CbStatisticsMsg struct {
	LinStats         *CbLinStatsMsg `protobuf:"bytes,1,opt,name=lin_stats" json:"lin_stats,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CbStatisticsMsg) Reset()         { *m = CbStatisticsMsg{} }
func (m *CbStatisticsMsg) String() string { return proto.CompactTextString(m) }
func (*CbStatisticsMsg) ProtoMessage()    {}

func (m *CbStatisticsMsg) GetLinStats() *CbLinStatsMsg {
	if m != nil {
		return m.LinStats
	}
	return nil
}

//
// CbModuleInfoMsg
//
// describes certain sensor-calculated metadata associated with an individual PE module
//
type CbModuleInfoMsg struct {
	Md5                     []byte  `protobuf:"bytes,1,opt,name=md5" json:"md5,omitempty"`
	CopiedModuleLength      *uint32 `protobuf:"varint,2,opt,name=CopiedModuleLength" json:"CopiedModuleLength,omitempty"`
	OriginalModuleLength    *uint64 `protobuf:"varint,3,opt,name=OriginalModuleLength" json:"OriginalModuleLength,omitempty"`
	Utf8_FileDescription    *string `protobuf:"bytes,4,opt,name=utf8_FileDescription" json:"utf8_FileDescription,omitempty"`
	Utf8_CompanyName        *string `protobuf:"bytes,5,opt,name=utf8_CompanyName" json:"utf8_CompanyName,omitempty"`
	Utf8_ProductName        *string `protobuf:"bytes,6,opt,name=utf8_ProductName" json:"utf8_ProductName,omitempty"`
	Utf8_FileVersion        *string `protobuf:"bytes,7,opt,name=utf8_FileVersion" json:"utf8_FileVersion,omitempty"`
	Utf8_Comments           *string `protobuf:"bytes,8,opt,name=utf8_Comments" json:"utf8_Comments,omitempty"`
	Utf8_LegalCopyright     *string `protobuf:"bytes,9,opt,name=utf8_LegalCopyright" json:"utf8_LegalCopyright,omitempty"`
	Utf8_LegalTrademark     *string `protobuf:"bytes,10,opt,name=utf8_LegalTrademark" json:"utf8_LegalTrademark,omitempty"`
	Utf8_InternalName       *string `protobuf:"bytes,11,opt,name=utf8_InternalName" json:"utf8_InternalName,omitempty"`
	Utf8_OriginalFileName   *string `protobuf:"bytes,12,opt,name=utf8_OriginalFileName" json:"utf8_OriginalFileName,omitempty"`
	Utf8_ProductDescription *string `protobuf:"bytes,13,opt,name=utf8_ProductDescription" json:"utf8_ProductDescription,omitempty"`
	Utf8_ProductVersion     *string `protobuf:"bytes,14,opt,name=utf8_ProductVersion" json:"utf8_ProductVersion,omitempty"`
	Utf8_PrivateBuild       *string `protobuf:"bytes,15,opt,name=utf8_PrivateBuild" json:"utf8_PrivateBuild,omitempty"`
	Utf8_SpecialBuild       *string `protobuf:"bytes,16,opt,name=utf8_SpecialBuild" json:"utf8_SpecialBuild,omitempty"`
	Utf8_DigSig_Publisher   *string `protobuf:"bytes,17,opt,name=utf8_DigSig_Publisher" json:"utf8_DigSig_Publisher,omitempty"`
	Utf8_DigSig_ProgramName *string `protobuf:"bytes,18,opt,name=utf8_DigSig_ProgramName" json:"utf8_DigSig_ProgramName,omitempty"`
	Utf8_DigSig_IssuerName  *string `protobuf:"bytes,19,opt,name=utf8_DigSig_IssuerName" json:"utf8_DigSig_IssuerName,omitempty"`
	Utf8_DigSig_SubjectName *string `protobuf:"bytes,20,opt,name=utf8_DigSig_SubjectName" json:"utf8_DigSig_SubjectName,omitempty"`
	Utf8_DigSig_Result      *string `protobuf:"bytes,21,opt,name=utf8_DigSig_Result" json:"utf8_DigSig_Result,omitempty"`
	Utf8_DigSig_ResultCode  *string `protobuf:"bytes,22,opt,name=utf8_DigSig_ResultCode" json:"utf8_DigSig_ResultCode,omitempty"`
	Utf8_DigSig_SignTime    *string `protobuf:"bytes,23,opt,name=utf8_DigSig_SignTime" json:"utf8_DigSig_SignTime,omitempty"`
	Icon                    []byte  `protobuf:"bytes,24,opt,name=Icon" json:"Icon,omitempty"`
	ImageFileHeader         []byte  `protobuf:"bytes,25,opt,name=ImageFileHeader" json:"ImageFileHeader,omitempty"`
	Utf8_OnDiskFilename     *string `protobuf:"bytes,26,opt,name=utf8_OnDiskFilename" json:"utf8_OnDiskFilename,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CbModuleInfoMsg) Reset()         { *m = CbModuleInfoMsg{} }
func (m *CbModuleInfoMsg) String() string { return proto.CompactTextString(m) }
func (*CbModuleInfoMsg) ProtoMessage()    {}

func (m *CbModuleInfoMsg) GetMd5() []byte {
	if m != nil {
		return m.Md5
	}
	return nil
}

func (m *CbModuleInfoMsg) GetCopiedModuleLength() uint32 {
	if m != nil && m.CopiedModuleLength != nil {
		return *m.CopiedModuleLength
	}
	return 0
}

func (m *CbModuleInfoMsg) GetOriginalModuleLength() uint64 {
	if m != nil && m.OriginalModuleLength != nil {
		return *m.OriginalModuleLength
	}
	return 0
}

func (m *CbModuleInfoMsg) GetUtf8_FileDescription() string {
	if m != nil && m.Utf8_FileDescription != nil {
		return *m.Utf8_FileDescription
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_CompanyName() string {
	if m != nil && m.Utf8_CompanyName != nil {
		return *m.Utf8_CompanyName
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_ProductName() string {
	if m != nil && m.Utf8_ProductName != nil {
		return *m.Utf8_ProductName
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_FileVersion() string {
	if m != nil && m.Utf8_FileVersion != nil {
		return *m.Utf8_FileVersion
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_Comments() string {
	if m != nil && m.Utf8_Comments != nil {
		return *m.Utf8_Comments
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_LegalCopyright() string {
	if m != nil && m.Utf8_LegalCopyright != nil {
		return *m.Utf8_LegalCopyright
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_LegalTrademark() string {
	if m != nil && m.Utf8_LegalTrademark != nil {
		return *m.Utf8_LegalTrademark
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_InternalName() string {
	if m != nil && m.Utf8_InternalName != nil {
		return *m.Utf8_InternalName
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_OriginalFileName() string {
	if m != nil && m.Utf8_OriginalFileName != nil {
		return *m.Utf8_OriginalFileName
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_ProductDescription() string {
	if m != nil && m.Utf8_ProductDescription != nil {
		return *m.Utf8_ProductDescription
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_ProductVersion() string {
	if m != nil && m.Utf8_ProductVersion != nil {
		return *m.Utf8_ProductVersion
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_PrivateBuild() string {
	if m != nil && m.Utf8_PrivateBuild != nil {
		return *m.Utf8_PrivateBuild
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_SpecialBuild() string {
	if m != nil && m.Utf8_SpecialBuild != nil {
		return *m.Utf8_SpecialBuild
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_DigSig_Publisher() string {
	if m != nil && m.Utf8_DigSig_Publisher != nil {
		return *m.Utf8_DigSig_Publisher
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_DigSig_ProgramName() string {
	if m != nil && m.Utf8_DigSig_ProgramName != nil {
		return *m.Utf8_DigSig_ProgramName
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_DigSig_IssuerName() string {
	if m != nil && m.Utf8_DigSig_IssuerName != nil {
		return *m.Utf8_DigSig_IssuerName
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_DigSig_SubjectName() string {
	if m != nil && m.Utf8_DigSig_SubjectName != nil {
		return *m.Utf8_DigSig_SubjectName
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_DigSig_Result() string {
	if m != nil && m.Utf8_DigSig_Result != nil {
		return *m.Utf8_DigSig_Result
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_DigSig_ResultCode() string {
	if m != nil && m.Utf8_DigSig_ResultCode != nil {
		return *m.Utf8_DigSig_ResultCode
	}
	return ""
}

func (m *CbModuleInfoMsg) GetUtf8_DigSig_SignTime() string {
	if m != nil && m.Utf8_DigSig_SignTime != nil {
		return *m.Utf8_DigSig_SignTime
	}
	return ""
}

func (m *CbModuleInfoMsg) GetIcon() []byte {
	if m != nil {
		return m.Icon
	}
	return nil
}

func (m *CbModuleInfoMsg) GetImageFileHeader() []byte {
	if m != nil {
		return m.ImageFileHeader
	}
	return nil
}

func (m *CbModuleInfoMsg) GetUtf8_OnDiskFilename() string {
	if m != nil && m.Utf8_OnDiskFilename != nil {
		return *m.Utf8_OnDiskFilename
	}
	return ""
}

//
// file-write message
//
// describe the write of a single file
//
// WARNING: This is an unsupported message and subject to change
//
type CbVtWriteMsg struct {
	WritingProcessExeMd5      []byte  `protobuf:"bytes,1,opt,name=WritingProcessExeMd5" json:"WritingProcessExeMd5,omitempty"`
	FileWrittenMd5            []byte  `protobuf:"bytes,2,opt,name=FileWrittenMd5" json:"FileWrittenMd5,omitempty"`
	FileWrittenIsPeModuleHint *bool   `protobuf:"varint,3,opt,name=FileWrittenIsPeModuleHint" json:"FileWrittenIsPeModuleHint,omitempty"`
	WritingProcessFilename    *string `protobuf:"bytes,4,opt,name=WritingProcessFilename" json:"WritingProcessFilename,omitempty"`
	FileWrittenFilename       *string `protobuf:"bytes,5,opt,name=FileWrittenFilename" json:"FileWrittenFilename,omitempty"`
	XXX_unrecognized          []byte  `json:"-"`
}

func (m *CbVtWriteMsg) Reset()         { *m = CbVtWriteMsg{} }
func (m *CbVtWriteMsg) String() string { return proto.CompactTextString(m) }
func (*CbVtWriteMsg) ProtoMessage()    {}

func (m *CbVtWriteMsg) GetWritingProcessExeMd5() []byte {
	if m != nil {
		return m.WritingProcessExeMd5
	}
	return nil
}

func (m *CbVtWriteMsg) GetFileWrittenMd5() []byte {
	if m != nil {
		return m.FileWrittenMd5
	}
	return nil
}

func (m *CbVtWriteMsg) GetFileWrittenIsPeModuleHint() bool {
	if m != nil && m.FileWrittenIsPeModuleHint != nil {
		return *m.FileWrittenIsPeModuleHint
	}
	return false
}

func (m *CbVtWriteMsg) GetWritingProcessFilename() string {
	if m != nil && m.WritingProcessFilename != nil {
		return *m.WritingProcessFilename
	}
	return ""
}

func (m *CbVtWriteMsg) GetFileWrittenFilename() string {
	if m != nil && m.FileWrittenFilename != nil {
		return *m.FileWrittenFilename
	}
	return ""
}

//
// deprecated
//
type CbVtLoadMsg struct {
	LoaderProcessExeMd5 []byte `protobuf:"bytes,1,opt,name=LoaderProcessExeMd5" json:"LoaderProcessExeMd5,omitempty"`
	LoadedModuleMd5     []byte `protobuf:"bytes,2,opt,name=LoadedModuleMd5" json:"LoadedModuleMd5,omitempty"`
	XXX_unrecognized    []byte `json:"-"`
}

func (m *CbVtLoadMsg) Reset()         { *m = CbVtLoadMsg{} }
func (m *CbVtLoadMsg) String() string { return proto.CompactTextString(m) }
func (*CbVtLoadMsg) ProtoMessage()    {}

func (m *CbVtLoadMsg) GetLoaderProcessExeMd5() []byte {
	if m != nil {
		return m.LoaderProcessExeMd5
	}
	return nil
}

func (m *CbVtLoadMsg) GetLoadedModuleMd5() []byte {
	if m != nil {
		return m.LoadedModuleMd5
	}
	return nil
}

//
// describes the sensor and host on which the event was collected
//
type CbEndpointEnvironmentMsg struct {
	SensorId         *int32  `protobuf:"varint,1,opt,name=SensorId" json:"SensorId,omitempty"`
	SensorHostName   *string `protobuf:"bytes,2,opt,name=SensorHostName" json:"SensorHostName,omitempty"`
	HostId           *int64  `protobuf:"varint,3,opt,name=HostId" json:"HostId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CbEndpointEnvironmentMsg) Reset()         { *m = CbEndpointEnvironmentMsg{} }
func (m *CbEndpointEnvironmentMsg) String() string { return proto.CompactTextString(m) }
func (*CbEndpointEnvironmentMsg) ProtoMessage()    {}

func (m *CbEndpointEnvironmentMsg) GetSensorId() int32 {
	if m != nil && m.SensorId != nil {
		return *m.SensorId
	}
	return 0
}

func (m *CbEndpointEnvironmentMsg) GetSensorHostName() string {
	if m != nil && m.SensorHostName != nil {
		return *m.SensorHostName
	}
	return ""
}

func (m *CbEndpointEnvironmentMsg) GetHostId() int64 {
	if m != nil && m.HostId != nil {
		return *m.HostId
	}
	return 0
}

//
// describes the server on which the event was received and processed
//
type CbServerEnvironmentMsg struct {
	NodeId           *int32 `protobuf:"varint,1,opt,name=NodeId" json:"NodeId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CbServerEnvironmentMsg) Reset()         { *m = CbServerEnvironmentMsg{} }
func (m *CbServerEnvironmentMsg) String() string { return proto.CompactTextString(m) }
func (*CbServerEnvironmentMsg) ProtoMessage()    {}

func (m *CbServerEnvironmentMsg) GetNodeId() int32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

//
// describes the environment on which the event was collected,
// transmitted, and received.
//
// populated by the server at import time, not by the sensor
// at collection or transmission time
//
type CbEnvironmentMsg struct {
	Endpoint         *CbEndpointEnvironmentMsg `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Server           *CbServerEnvironmentMsg   `protobuf:"bytes,2,opt,name=server" json:"server,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *CbEnvironmentMsg) Reset()         { *m = CbEnvironmentMsg{} }
func (m *CbEnvironmentMsg) String() string { return proto.CompactTextString(m) }
func (*CbEnvironmentMsg) ProtoMessage()    {}

func (m *CbEnvironmentMsg) GetEndpoint() *CbEndpointEnvironmentMsg {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *CbEnvironmentMsg) GetServer() *CbServerEnvironmentMsg {
	if m != nil {
		return m.Server
	}
	return nil
}

//
// the follow are for tamper "alerts" that don't
// fit within events that are associated with a specific process
//
type CbTamperAlertMsg struct {
	Type             *CbTamperAlertMsg_CbTamperAlertType `protobuf:"varint,1,opt,name=type,enum=CbTamperAlertMsg_CbTamperAlertType" json:"type,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CbTamperAlertMsg) Reset()         { *m = CbTamperAlertMsg{} }
func (m *CbTamperAlertMsg) String() string { return proto.CompactTextString(m) }
func (*CbTamperAlertMsg) ProtoMessage()    {}

func (m *CbTamperAlertMsg) GetType() CbTamperAlertMsg_CbTamperAlertType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return CbTamperAlertMsg_AlertCoreDriverUnloaded
}

//
// this is the event messages corresponding to EMET
// events from the host
//
type CbEmetMitigationAction struct {
	MitigationType   *CbEmetMitigationAction_CbEmetMitigationTypes `protobuf:"varint,1,opt,name=mitigationType,enum=CbEmetMitigationAction_CbEmetMitigationTypes" json:"mitigationType,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CbEmetMitigationAction) Reset()         { *m = CbEmetMitigationAction{} }
func (m *CbEmetMitigationAction) String() string { return proto.CompactTextString(m) }
func (*CbEmetMitigationAction) ProtoMessage()    {}

func (m *CbEmetMitigationAction) GetMitigationType() CbEmetMitigationAction_CbEmetMitigationTypes {
	if m != nil && m.MitigationType != nil {
		return *m.MitigationType
	}
	return CbEmetMitigationAction_actionDep
}

type CbEmetMitigationMsg struct {
	EmetId           *uint64                 `protobuf:"varint,1,opt,name=emetId" json:"emetId,omitempty"`
	EmetTimstamp     *uint64                 `protobuf:"varint,2,opt,name=emetTimstamp" json:"emetTimstamp,omitempty"`
	Action           *CbEmetMitigationAction `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	ActionText       *string                 `protobuf:"bytes,4,opt,name=actionText" json:"actionText,omitempty"`
	Blocked          *bool                   `protobuf:"varint,5,opt,name=blocked,def=0" json:"blocked,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CbEmetMitigationMsg) Reset()         { *m = CbEmetMitigationMsg{} }
func (m *CbEmetMitigationMsg) String() string { return proto.CompactTextString(m) }
func (*CbEmetMitigationMsg) ProtoMessage()    {}

const Default_CbEmetMitigationMsg_Blocked bool = false

func (m *CbEmetMitigationMsg) GetEmetId() uint64 {
	if m != nil && m.EmetId != nil {
		return *m.EmetId
	}
	return 0
}

func (m *CbEmetMitigationMsg) GetEmetTimstamp() uint64 {
	if m != nil && m.EmetTimstamp != nil {
		return *m.EmetTimstamp
	}
	return 0
}

func (m *CbEmetMitigationMsg) GetAction() *CbEmetMitigationAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *CbEmetMitigationMsg) GetActionText() string {
	if m != nil && m.ActionText != nil {
		return *m.ActionText
	}
	return ""
}

func (m *CbEmetMitigationMsg) GetBlocked() bool {
	if m != nil && m.Blocked != nil {
		return *m.Blocked
	}
	return Default_CbEmetMitigationMsg_Blocked
}

type CbEventMsg struct {
	Header           *CbHeaderMsg         `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	Strings          []*CbStringMsg       `protobuf:"bytes,2,rep,name=strings" json:"strings,omitempty"`
	Process          *CbProcessMsg        `protobuf:"bytes,3,opt,name=process" json:"process,omitempty"`
	Modload          *CbModuleLoadMsg     `protobuf:"bytes,4,opt,name=modload" json:"modload,omitempty"`
	Filemod          *CbFileModMsg        `protobuf:"bytes,5,opt,name=filemod" json:"filemod,omitempty"`
	Network          *CbNetConnMsg        `protobuf:"bytes,6,opt,name=network" json:"network,omitempty"`
	Regmod           *CbRegModMsg         `protobuf:"bytes,7,opt,name=regmod" json:"regmod,omitempty"`
	Stats            *CbStatisticsMsg     `protobuf:"bytes,8,opt,name=stats" json:"stats,omitempty"`
	Module           *CbModuleInfoMsg     `protobuf:"bytes,9,opt,name=module" json:"module,omitempty"`
	Vtwrite          *CbVtWriteMsg        `protobuf:"bytes,10,opt,name=vtwrite" json:"vtwrite,omitempty"`
	Vtload           *CbVtLoadMsg         `protobuf:"bytes,11,opt,name=vtload" json:"vtload,omitempty"`
	Childproc        *CbChildProcessMsg   `protobuf:"bytes,12,opt,name=childproc" json:"childproc,omitempty"`
	Env              *CbEnvironmentMsg    `protobuf:"bytes,13,opt,name=env" json:"env,omitempty"`
	Crossproc        *CbCrossProcessMsg   `protobuf:"bytes,14,opt,name=crossproc" json:"crossproc,omitempty"`
	TamperAlert      *CbTamperAlertMsg    `protobuf:"bytes,15,opt,name=tamperAlert" json:"tamperAlert,omitempty"`
	Blocked          *CbProcessBlockedMsg `protobuf:"bytes,16,opt,name=blocked" json:"blocked,omitempty"`
	Emet             *CbEmetMitigationMsg `protobuf:"bytes,17,opt,name=emet" json:"emet,omitempty"`
	NetconnBlocked   *CbNetConnBlockedMsg `protobuf:"bytes,18,opt,name=netconnBlocked" json:"netconnBlocked,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CbEventMsg) Reset()         { *m = CbEventMsg{} }
func (m *CbEventMsg) String() string { return proto.CompactTextString(m) }
func (*CbEventMsg) ProtoMessage()    {}

func (m *CbEventMsg) GetHeader() *CbHeaderMsg {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CbEventMsg) GetStrings() []*CbStringMsg {
	if m != nil {
		return m.Strings
	}
	return nil
}

func (m *CbEventMsg) GetProcess() *CbProcessMsg {
	if m != nil {
		return m.Process
	}
	return nil
}

func (m *CbEventMsg) GetModload() *CbModuleLoadMsg {
	if m != nil {
		return m.Modload
	}
	return nil
}

func (m *CbEventMsg) GetFilemod() *CbFileModMsg {
	if m != nil {
		return m.Filemod
	}
	return nil
}

func (m *CbEventMsg) GetNetwork() *CbNetConnMsg {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *CbEventMsg) GetRegmod() *CbRegModMsg {
	if m != nil {
		return m.Regmod
	}
	return nil
}

func (m *CbEventMsg) GetStats() *CbStatisticsMsg {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *CbEventMsg) GetModule() *CbModuleInfoMsg {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *CbEventMsg) GetVtwrite() *CbVtWriteMsg {
	if m != nil {
		return m.Vtwrite
	}
	return nil
}

func (m *CbEventMsg) GetVtload() *CbVtLoadMsg {
	if m != nil {
		return m.Vtload
	}
	return nil
}

func (m *CbEventMsg) GetChildproc() *CbChildProcessMsg {
	if m != nil {
		return m.Childproc
	}
	return nil
}

func (m *CbEventMsg) GetEnv() *CbEnvironmentMsg {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *CbEventMsg) GetCrossproc() *CbCrossProcessMsg {
	if m != nil {
		return m.Crossproc
	}
	return nil
}

func (m *CbEventMsg) GetTamperAlert() *CbTamperAlertMsg {
	if m != nil {
		return m.TamperAlert
	}
	return nil
}

func (m *CbEventMsg) GetBlocked() *CbProcessBlockedMsg {
	if m != nil {
		return m.Blocked
	}
	return nil
}

func (m *CbEventMsg) GetEmet() *CbEmetMitigationMsg {
	if m != nil {
		return m.Emet
	}
	return nil
}

func (m *CbEventMsg) GetNetconnBlocked() *CbNetConnBlockedMsg {
	if m != nil {
		return m.NetconnBlocked
	}
	return nil
}

func init() {
	proto.RegisterEnum("CbStringMsg_CbStringType", CbStringMsg_CbStringType_name, CbStringMsg_CbStringType_value)
	proto.RegisterEnum("CbFileModMsg_CbFileModAction", CbFileModMsg_CbFileModAction_name, CbFileModMsg_CbFileModAction_value)
	proto.RegisterEnum("CbFileModMsg_CbFileType", CbFileModMsg_CbFileType_name, CbFileModMsg_CbFileType_value)
	proto.RegisterEnum("CbRegModMsg_CbRegModAction", CbRegModMsg_CbRegModAction_name, CbRegModMsg_CbRegModAction_value)
	proto.RegisterEnum("CbNetConnMsg_ProtocolType", CbNetConnMsg_ProtocolType_name, CbNetConnMsg_ProtocolType_value)
	proto.RegisterEnum("CbCrossProcessOpenMsg_OpenType", CbCrossProcessOpenMsg_OpenType_name, CbCrossProcessOpenMsg_OpenType_value)
	proto.RegisterEnum("CbProcessBlockedMsg_BlockType", CbProcessBlockedMsg_BlockType_name, CbProcessBlockedMsg_BlockType_value)
	proto.RegisterEnum("CbProcessBlockedMsg_BlockEvent", CbProcessBlockedMsg_BlockEvent_name, CbProcessBlockedMsg_BlockEvent_value)
	proto.RegisterEnum("CbProcessBlockedMsg_BlockResult", CbProcessBlockedMsg_BlockResult_name, CbProcessBlockedMsg_BlockResult_value)
	proto.RegisterEnum("CbNetConnBlockedMsg_NetconnBlockType", CbNetConnBlockedMsg_NetconnBlockType_name, CbNetConnBlockedMsg_NetconnBlockType_value)
	proto.RegisterEnum("CbNetConnBlockedMsg_ProtocolType", CbNetConnBlockedMsg_ProtocolType_name, CbNetConnBlockedMsg_ProtocolType_value)
	proto.RegisterEnum("CbTamperAlertMsg_CbTamperAlertType", CbTamperAlertMsg_CbTamperAlertType_name, CbTamperAlertMsg_CbTamperAlertType_value)
	proto.RegisterEnum("CbEmetMitigationAction_CbEmetMitigationTypes", CbEmetMitigationAction_CbEmetMitigationTypes_name, CbEmetMitigationAction_CbEmetMitigationTypes_value)
}
