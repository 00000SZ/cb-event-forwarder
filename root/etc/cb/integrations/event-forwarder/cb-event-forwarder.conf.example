[bridge]

###########
#General Config Options
##########

#
# How many process pools should the script spin up to
# process events off of the bus.
message_processor_count=4

#
# This is a name that gets populated in all JSON objects
# as "cb_server".  This can help distinguish messages when
# data from multiple Carbon Black deployments are merged
# into a single source
server_name=None

# enable extra debugging output
debug=0

#
# Bus Connection Options
#
# There are two deployment options:
#
# 1) For small deployments, or for low volume subscriptions (such as new binaries, feed/watchlist hits),
#    you can install this connector directly on the Carbon Black server. In this case, leave the following
#    three configuration options blank and the service will connect to the local RabbitMQ instance using
#    the credentials from the /etc/cb/cb.conf file.
#
# 2) For larger deployments, or for high volume subscriptions (such as raw endpoint events), it is recommended
#    to install this connector on its own dedicated machine. In this case, fill the following three configuration
#    options with the RabbitMQUser, RabbitMQPassword, and the IP/hostname of the Carbon Black server or master
#    node respectively. You will have to ensure that your host can connect to TCP port 5004 on the Carbon Black
#    server.
#
rabbit_mq_username=
rabbit_mq_password=
cb_server_hostname=

#########
# Output Options
#########

#
# Configure the specific output.
# Valid options are: 'udp', 'tcp', 'file', 'stdout', 's3'
#
#  udp - Have the events sent over a UDP socket
#  tcp - Have the events sent over a TCP socket
#  file - Output the events to a rotating file
#  stdout - Print to stdout (not really useful)
#  s3 - Place in S3 bucket (not officially supported)
#
output_type=file

#
# Output specific configuration
# These only have meaning if the option
# is enabled
#

outfile=/var/cb/data/event_bridge_output.json

# tcpout=IP:port - ie 1.2.3.5:8080
tcpout=None

# udpout=IP:port - ie 1.2.3.5:8080
udpout=None

# options for S3 support
# s3out: The s3 bucket name
# aws_key: The aws access key id. Leave blank to use the boto standard credential search path
# aws_secret: The aws secret access key. Leave blank to use the boto standard credential search path
s3out=None
aws_key=
aws_secret=

#########
# Configuration for which events are captured
#
# To specify multiple events use comma as a separator
# e.g. events_raw_sensor=ingress.event.process,ingress.event.procstart
#
#
# For more info on supported event types see
# https://github.com/carbonblack/cbapi/tree/master/server_apis
#
# Note: To enable raw sensor events you must also edit the Carbon Black config
#  file (cb.conf) and enable the appropriate events by changing the config
#  option DatastoreBroadcastEventTypes.
#
# Note: To enable binaryinfo. events you need to enable EnableSolrBinaryInfoNotifications=True
#  within the cb.conf
#########

# Raw Sensor (endpoint) Events
# Includes:
#   ingress.event.process
#   ingress.event.procstart
#   ingress.event.netconn
#   ingress.event.procend
#   ingress.event.childproc
#   ingress.event.moduleload
#   ingress.event.module
#   ingress.event.filemod
#   ingress.event.regmod
#   ALL for all of the above
#   0 - to disable all raw sensor events.
events_raw_sensor=ALL

# Watchlist Hits
# Includes:
#  watchlist.hit.process
#  watchlist.hit.binary
#  watchlist.storage.hit.process
#  watchlist.storage.hit.binary
events_watchlist=ALL

# Feed Hits
# Includes:
#   feed.ingress.hit.process
#   feed.ingress.hit.binary
#   feed.ingress.hit.host
#   feed.storage.hit.process
#   feed.storage.hit.binary
#   feed.query.hit.process
#   feed.query.hit.binary
#   ALL for all of the above
#   0 - to disable all raw sensor events
events_feed=ALL

# Alert Events
# Includes:
#   alert.watchlist.hit.ingress.process
#   alert.watchlist.hit.ingress.binary
#   alert.watchlist.hit.ingress.host
#   alert.watchlist.hit.query.process
#   alert.watchlist.hit.query.binary
#   ALL for all of the above
#   0 - to disable all raw sensor events
events_alert=ALL

# Binary Observed Events
# Includes:
#   binaryinfo.observed
#   binaryinfo.host.observed
#   binaryinfo.group.observed
events_binary_observed=ALL

# Binary Upload Events
# Includes:
#   binarystore.file.added
events_binary_upload=ALL

